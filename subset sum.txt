#include<bits/stdc++.h>
using namespace std;

int subsetsum(int A[],int n,int x){
    int i;
    int j;
    for(i=0;i<n;i++){
        for(j=i+1;j<n;j++){
            if(A[i] + A[j] == x){
                return true;
                break;
            }
        }
    }
    return false;
}

int subsetSumUsingDp(int A[],int n,int sum){
    int t[n+1][sum+1];
    int i;
    int j;
    for(i=0;i<n+1;i++){
        for(j=0;j<sum+1;j++){
            if(i==0){
                t[i][j] = false;
            }else if(j==0){
                t[i][j] = true;
            }
        }

    }

    for(i=1;i<n+1;i++){
        for(j=1;j<sum+1;j++){
            if(A[i-1] <= sum){
            t[i][j] = t[i-1][j-A[i-1]] || t[i-1][j];
            }else if(A[i-1] > sum){
              t[i][j] = t[i-1][j];  
            }
        }
    }
    return t[n][sum];

}


int main(){
    int A[] = {2,3,7,8,10};
    int n = sizeof(A)/sizeof(A[0]);
    cout<<subsetsum(A,n,10);
    cout<<"\n";
     cout<<subsetsum(A,n,10);
}